{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AccessToken from \"./fetch/AccessToken\";\nexport default function SpotifyFetch() {\n  _s();\n  const [trackDetails, setTrackDetails] = useState(null);\n  /*const [accessToken, setAccessToken] = useState(null);*/ // Initialize accessToken state\n\n  useEffect(() => {\n    const fetchAccessToken = AccessToken();\n    const fetchTrackDetails = async () => {\n      try {\n        const trackId = \"5VC29kHMkzcaorzPKUqJbl\";\n        const response = await fetch(\"https://api.spotify.com/v1/tracks/\".concat(trackId), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \".concat(accessToken)\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch track details\");\n        }\n        const data = await response.json();\n        setTrackDetails(data);\n      } catch (error) {\n        console.error(\"Error fetching track details:\", error);\n      }\n    };\n    if (accessToken) {\n      fetchTrackDetails();\n    } else {\n      fetchAccessToken();\n    }\n  }, [accessToken]); // Include accessToken as a dependency to trigger the effect when it changes\n\n  return \"\";\n}\n_s(SpotifyFetch, \"qjFEO//Wca8hIPb0La0TzDkPTXk=\");\n_c = SpotifyFetch;\nvar _c;\n$RefreshReg$(_c, \"SpotifyFetch\");","map":{"version":3,"names":["React","useState","useEffect","AccessToken","SpotifyFetch","_s","trackDetails","setTrackDetails","fetchAccessToken","fetchTrackDetails","trackId","response","fetch","concat","method","headers","Authorization","accessToken","ok","Error","data","json","error","console","_c","$RefreshReg$"],"sources":["/workspaces/gymnasiearbete/src/components/SpotifyFetch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AccessToken from \"./fetch/AccessToken\";\r\n\r\nexport default function SpotifyFetch() {\r\n  const [trackDetails, setTrackDetails] = useState(null);\r\n  /*const [accessToken, setAccessToken] = useState(null);*/ // Initialize accessToken state\r\n\r\n  useEffect(() => {\r\n    const fetchAccessToken = AccessToken();\r\n\r\n    const fetchTrackDetails = async () => {\r\n      try {\r\n        const trackId = \"5VC29kHMkzcaorzPKUqJbl\";\r\n        const response = await fetch(\r\n          `https://api.spotify.com/v1/tracks/${trackId}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch track details\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setTrackDetails(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching track details:\", error);\r\n      }\r\n    };\r\n\r\n    if (accessToken) {\r\n      fetchTrackDetails();\r\n    } else {\r\n      fetchAccessToken();\r\n    }\r\n  }, [accessToken]); // Include accessToken as a dependency to trigger the effect when it changes\r\n\r\n  return \"\";\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,qBAAqB;AAE7C,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,0DAA0D;;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMM,gBAAgB,GAAGL,WAAW,CAAC,CAAC;IAEtC,MAAMM,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,OAAO,GAAG,wBAAwB;QACxC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,sCAAAC,MAAA,CACWH,OAAO,GAC5C;UACEI,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,YAAAH,MAAA,CAAYI,WAAW;UACtC;QACF,CACF,CAAC;QAED,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;QAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCd,eAAe,CAACa,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAED,IAAIL,WAAW,EAAE;MACfR,iBAAiB,CAAC,CAAC;IACrB,CAAC,MAAM;MACLD,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACS,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,OAAO,EAAE;AACX;AAACZ,EAAA,CAvCuBD,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}