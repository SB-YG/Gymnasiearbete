{"ast":null,"code":"var _jsxFileName = \"/workspaces/gymnasiearbete/src/components/SpotifySingleInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport spotifyAccessToken from \"../tokens/SpotifyAccessToken\";\nimport { useAccessToken } from \"./Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifySingleInfo = () => {\n  _s();\n  const accessToken = useAccessToken();\n  const [singleId, setSingleId] = useState(\"\");\n  const [singleInfo, setSingleInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const handleInputChange = event => {\n    setSingleId(event.target.value);\n  };\n  const fetchSingleInfo = () => {\n    if (!singleId) {\n      setError(\"Please enter a Spotify single ID.\");\n      return;\n    }\n    const apiUrl = \"https://api.spotify.com/v1/tracks/\".concat(singleId, \"?market=SV\");\n    const fetchConfig = {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken) // You should replace `spotifyAccessToken` with your actual access token\n      }\n    };\n    fetch(apiUrl, fetchConfig).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      setSingleInfo(data);\n      setError(null);\n    }).catch(error => {\n      console.error(\"There was a problem with the fetch operation:\", error);\n      setError(error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spotify Single Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Spotify Single ID\",\n      value: singleId,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSingleInfo,\n      children: \"Get Single Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), singleInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Title: \", singleInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Artist: \", singleInfo.artists.map(artist => artist.name).join(\", \"), \" \", \"(ID: \", singleInfo.artists.map(artist => artist.id).join(\", \"), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Genre: \", singleInfo.genre ? singleInfo.genre : \"No genre\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album name: \", singleInfo.album.name, \" (ID: \", singleInfo.album.id, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album release date: \", singleInfo.album.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Preview:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: singleInfo.preview_url,\n          target: \"_blank\",\n          children: \"Listen here! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), singleInfo.album && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: singleInfo.album.images[1].url,\n        alt: singleInfo.album.name,\n        className: \"album-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifySingleInfo, \"maoBOcgH9v/yZ4n2Urd+TeHOi2Q=\", false, function () {\n  return [useAccessToken];\n});\n_c = SpotifySingleInfo;\nexport default SpotifySingleInfo;\nvar _c;\n$RefreshReg$(_c, \"SpotifySingleInfo\");","map":{"version":3,"names":["React","useState","spotifyAccessToken","useAccessToken","jsxDEV","_jsxDEV","SpotifySingleInfo","_s","accessToken","singleId","setSingleId","singleInfo","setSingleInfo","error","setError","handleInputChange","event","target","value","fetchSingleInfo","apiUrl","concat","fetchConfig","headers","Authorization","fetch","then","response","ok","Error","json","data","catch","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","name","artists","map","artist","join","id","genre","album","release_date","href","preview_url","src","images","url","alt","className","_c","$RefreshReg$"],"sources":["/workspaces/gymnasiearbete/src/components/SpotifySingleInfo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport spotifyAccessToken from \"../tokens/SpotifyAccessToken\";\r\nimport { useAccessToken } from \"./Auth\";\r\n\r\nconst SpotifySingleInfo = () => {\r\n  const accessToken = useAccessToken();\r\n  const [singleId, setSingleId] = useState(\"\");\r\n  const [singleInfo, setSingleInfo] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    setSingleId(event.target.value);\r\n  };\r\n\r\n  const fetchSingleInfo = () => {\r\n    if (!singleId) {\r\n      setError(\"Please enter a Spotify single ID.\");\r\n      return;\r\n    }\r\n\r\n    const apiUrl = `https://api.spotify.com/v1/tracks/${singleId}?market=SV`;\r\n\r\n    const fetchConfig = {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`, // You should replace `spotifyAccessToken` with your actual access token\r\n      },\r\n    };\r\n\r\n    fetch(apiUrl, fetchConfig)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setSingleInfo(data);\r\n        setError(null);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was a problem with the fetch operation:\", error);\r\n        setError(error.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Spotify Single Info</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter Spotify Single ID\"\r\n        value={singleId}\r\n        onChange={handleInputChange}\r\n      />\r\n      <button onClick={fetchSingleInfo}>Get Single Info</button>\r\n      {error && <p>Error: {error}</p>}\r\n      {singleInfo && (\r\n        <div>\r\n          <h2>Title: {singleInfo.name}</h2>\r\n          <p>\r\n            Artist: {singleInfo.artists.map((artist) => artist.name).join(\", \")}{\" \"}\r\n            (ID: {singleInfo.artists.map((artist) => artist.id).join(\", \")})\r\n          </p>\r\n          <p>Genre: {singleInfo.genre ? singleInfo.genre : \"No genre\"}</p>\r\n          <p>\r\n            Album name: {singleInfo.album.name} (ID: {singleInfo.album.id})\r\n          </p>\r\n          <p>Album release date: {singleInfo.album.release_date}</p>\r\n          <p>\r\n            Preview:{\" \"}\r\n            <a href={singleInfo.preview_url} target=\"_blank\">\r\n              Listen here! {/* Will be embeded later */}\r\n            </a>\r\n          </p>\r\n          {/* Replace 'genre' with the actual property name from Spotify API response */}\r\n          {singleInfo.album && (\r\n            <img\r\n              src={singleInfo.album.images[1].url}\r\n              alt={singleInfo.album.name}\r\n              className=\"album-image\"\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpotifySingleInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}