{"ast":null,"code":"var _jsxFileName = \"/workspaces/gymnasiearbete/src/components/SpotifyFetch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AccessToken from \"./fetch/AccessToken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SpotifyFetch(_ref) {\n  _s();\n  let {\n    trackId\n  } = _ref;\n  const [trackDetails, setTrackDetails] = useState(null);\n  /*const [accessToken, setAccessToken] = useState(null);*/ // Initialize accessToken state\n\n  useEffect(() => {\n    const fetchAccessToken = AccessToken();\n    const fetchTrackDetails = async () => {\n      try {\n        //const trackId = \"5VC29kHMkzcaorzPKUqJbl\";\n        const response = await fetch(\"https://api.spotify.com/v1/tracks/\".concat(trackId), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \".concat(accessToken)\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch track details\");\n        }\n        const data = await response.json();\n        setTrackDetails(data);\n      } catch (error) {\n        console.error(\"Error fetching track details:\", error);\n      }\n    };\n    if (accessToken) {\n      fetchTrackDetails();\n    } else {\n      fetchAccessToken();\n    }\n  }, [accessToken]); // Include accessToken as a dependency to trigger the effect when it changes\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), trackDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Track Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", trackDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Artist: \", trackDetails.artists[0].name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album: \", trackDetails.album.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"AccessToken: \", accessToken]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(SpotifyFetch, \"qjFEO//Wca8hIPb0La0TzDkPTXk=\");\n_c = SpotifyFetch;\nvar _c;\n$RefreshReg$(_c, \"SpotifyFetch\");","map":{"version":3,"names":["React","useState","useEffect","AccessToken","jsxDEV","_jsxDEV","Fragment","_Fragment","SpotifyFetch","_ref","_s","trackId","trackDetails","setTrackDetails","fetchAccessToken","fetchTrackDetails","response","fetch","concat","method","headers","Authorization","accessToken","ok","Error","data","json","error","console","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","name","artists","album","_c","$RefreshReg$"],"sources":["/workspaces/gymnasiearbete/src/components/SpotifyFetch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AccessToken from \"./fetch/AccessToken\";\r\n\r\nexport default function SpotifyFetch({ trackId }) {\r\n  const [trackDetails, setTrackDetails] = useState(null);\r\n  /*const [accessToken, setAccessToken] = useState(null);*/ // Initialize accessToken state\r\n\r\n  useEffect(() => {\r\n    const fetchAccessToken = AccessToken();\r\n\r\n    const fetchTrackDetails = async () => {\r\n      try {\r\n        //const trackId = \"5VC29kHMkzcaorzPKUqJbl\";\r\n        const response = await fetch(\r\n          `https://api.spotify.com/v1/tracks/${trackId}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch track details\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setTrackDetails(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching track details:\", error);\r\n      }\r\n    };\r\n\r\n    if (accessToken) {\r\n      fetchTrackDetails();\r\n    } else {\r\n      fetchAccessToken();\r\n    }\r\n  }, [accessToken]); // Include accessToken as a dependency to trigger the effect when it changes\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      {trackDetails && (\r\n        <div>\r\n          <h3>Track Details</h3>\r\n          <p>Title: {trackDetails.name}</p>\r\n          <p>Artist: {trackDetails.artists[0].name}</p>\r\n          <p>Album: {trackDetails.album.name}</p>\r\n          <p>AccessToken: {accessToken}</p> {/* Display the access token */}\r\n          {/* Visa övriga detaljer om låten om det behövs */}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC9C,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,0DAA0D;;EAE1DC,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAGX,WAAW,CAAC,CAAC;IAEtC,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,sCAAAC,MAAA,CACWP,OAAO,GAC5C;UACEQ,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,YAAAH,MAAA,CAAYI,WAAW;UACtC;QACF,CACF,CAAC;QAED,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;QAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCb,eAAe,CAACY,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAED,IAAIL,WAAW,EAAE;MACfP,iBAAiB,CAAC,CAAC;IACrB,CAAC,MAAM;MACLD,gBAAgB,CAAC,CAAC;IACpB;EACF,CAAC,EAAE,CAACQ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,oBACEjB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA,CAACyB,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTtB,YAAY,iBACXP,OAAA;MAAAwB,QAAA,gBACExB,OAAA;QAAAwB,QAAA,EAAI;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB7B,OAAA;QAAAwB,QAAA,GAAG,SAAO,EAACjB,YAAY,CAACuB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjC7B,OAAA;QAAAwB,QAAA,GAAG,UAAQ,EAACjB,YAAY,CAACwB,OAAO,CAAC,CAAC,CAAC,CAACD,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7C7B,OAAA;QAAAwB,QAAA,GAAG,SAAO,EAACjB,YAAY,CAACyB,KAAK,CAACF,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvC7B,OAAA;QAAAwB,QAAA,GAAG,eAAa,EAACP,WAAW;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/B,CACN;EAAA,eACD,CAAC;AAEP;AAACxB,EAAA,CArDuBF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}