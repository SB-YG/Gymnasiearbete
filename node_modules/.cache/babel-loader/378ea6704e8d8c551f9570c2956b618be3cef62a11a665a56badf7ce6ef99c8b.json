{"ast":null,"code":"var _jsxFileName = \"/workspaces/gymnasiearbete/src/components/SpotifyData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ArtistInfo from \"./ArtistInfo\";\nimport spotifyAccessToken from \"../tokens/SpotifyAccessToken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpotifyData = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(null);\n  const [spotifyData, setSpotifyData] = useState(null);\n  const [error, setError] = useState(null); // Add state for errors\n\n  useEffect(() => {\n    const generateAccessToken = async () => {\n      // ... Access token generation logic ...\n    };\n    generateAccessToken();\n  }, []);\n  useEffect(() => {\n    if (accessToken) {\n      const apiUrl = \"https://api.spotify.com/v1/artists/53XhwfbYqKCa1cC15pYq2q\";\n      const fetchConfig = {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \".concat(accessToken)\n        }\n      };\n      fetch(apiUrl, fetchConfig).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      }).then(data => {\n        setSpotifyData(data);\n      }).catch(error => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        setError(error.message); // Set error message\n      });\n    }\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spotify Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), spotifyData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ArtistInfo, {\n        artistData: spotifyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [spotifyData.name, \" - Albums\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), spotifyData.items &&\n      /*#__PURE__*/\n      // Check for presence of items before rendering AlbumsList\n      _jsxDEV(\"div\", {\n        className: \"albums-container\",\n        children: spotifyData.items.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-item\"\n        }, album.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyData, \"LkeIh+e+ESsE+XQzP6i+90DEaAg=\");\n_c = SpotifyData;\nexport default SpotifyData;\nvar _c;\n$RefreshReg$(_c, \"SpotifyData\");","map":{"version":3,"names":["React","useState","useEffect","ArtistInfo","spotifyAccessToken","jsxDEV","_jsxDEV","Fragment","_Fragment","SpotifyData","_s","accessToken","setAccessToken","spotifyData","setSpotifyData","error","setError","generateAccessToken","apiUrl","fetchConfig","method","headers","Authorization","concat","fetch","then","response","ok","Error","json","data","catch","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","artistData","name","items","className","map","album","id","_c","$RefreshReg$"],"sources":["/workspaces/gymnasiearbete/src/components/SpotifyData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ArtistInfo from \"./ArtistInfo\";\r\nimport spotifyAccessToken from \"../tokens/SpotifyAccessToken\";\r\n\r\nconst SpotifyData = () => {\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [spotifyData, setSpotifyData] = useState(null);\r\n  const [error, setError] = useState(null); // Add state for errors\r\n\r\n  useEffect(() => {\r\n    const generateAccessToken = async () => {\r\n      // ... Access token generation logic ...\r\n    };\r\n\r\n    generateAccessToken();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      const apiUrl =\r\n        \"https://api.spotify.com/v1/artists/53XhwfbYqKCa1cC15pYq2q\";\r\n\r\n      const fetchConfig = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      fetch(apiUrl, fetchConfig)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          setSpotifyData(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was a problem with the fetch operation:\", error);\r\n          setError(error.message); // Set error message\r\n        });\r\n    }\r\n  }, [accessToken]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Spotify Data</h1>\r\n      {error && <p>Error: {error}</p>}\r\n      {spotifyData && (\r\n        <>\r\n          <ArtistInfo artistData={spotifyData} />\r\n          <hr />\r\n          <h2>{spotifyData.name} - Albums</h2>\r\n          {spotifyData.items && ( // Check for presence of items before rendering AlbumsList\r\n            <div className=\"albums-container\">\r\n              {spotifyData.items.map((album) => (\r\n                <div key={album.id} className=\"album-item\">\r\n                  {/* ... Album details ... */}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpotifyData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}