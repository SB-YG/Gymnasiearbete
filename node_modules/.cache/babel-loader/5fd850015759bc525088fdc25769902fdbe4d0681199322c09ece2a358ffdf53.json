{"ast":null,"code":"var _jsxFileName = \"/workspaces/gymnasiearbete/src/components/SpotifyFetch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AccessToken from \"./fetch/AccessToken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SpotifyFetch(_ref) {\n  _s();\n  let {\n    trackId\n  } = _ref;\n  const [trackDetails, setTrackDetails] = useState(null);\n  const fetchAccessToken = AccessToken(); // Använd AccessToken för att hämta access token\n\n  useEffect(() => {\n    const fetchAccessToken = async () => {\n      try {\n        const response = await fetch(\"https://accounts.spotify.com/api/token\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            Authorization: \"Basic \" + btoa(\"2996a4789f6c4508a187d42e86df6eac:eae403656d5d4b4cb324745279a224e1\")\n          },\n          body: \"grant_type=client_credentials\"\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch access token\");\n        }\n        const data = await response.json();\n        setAccessToken(data.access_token); // Sätt åtkomsttoken i staten\n        return data.access_token; // Returnera åtkomsttoken\n      } catch (error) {\n        console.error(\"Error fetching access token:\", error);\n      }\n    };\n    const fetchTrackDetails = async () => {\n      try {\n        const accessToken = await fetchAccessToken(); // Hämta access token genom att anropa fetchAccessToken\n        const response = await fetch(\"https://api.spotify.com/v1/tracks/\".concat(trackId), {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \".concat(accessToken)\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch track details\");\n        }\n        const data = await response.json();\n        setTrackDetails(data);\n      } catch (error) {\n        console.error(\"Error fetching track details:\", error);\n      }\n    };\n    fetchTrackDetails();\n  }, [fetchAccessToken, trackId]); // Include fetchAccessToken as a dependency\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: trackDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Track Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", trackDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Artist: \", trackDetails.artists[0].name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Album: \", trackDetails.album.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(SpotifyFetch, \"qjFEO//Wca8hIPb0La0TzDkPTXk=\");\n_c = SpotifyFetch;\nvar _c;\n$RefreshReg$(_c, \"SpotifyFetch\");","map":{"version":3,"names":["React","useState","useEffect","AccessToken","jsxDEV","_jsxDEV","Fragment","_Fragment","SpotifyFetch","_ref","_s","trackId","trackDetails","setTrackDetails","fetchAccessToken","response","fetch","method","headers","Authorization","btoa","body","ok","Error","data","json","setAccessToken","access_token","error","console","fetchTrackDetails","accessToken","concat","children","fileName","_jsxFileName","lineNumber","columnNumber","name","artists","album","_c","$RefreshReg$"],"sources":["/workspaces/gymnasiearbete/src/components/SpotifyFetch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AccessToken from \"./fetch/AccessToken\";\r\n\r\nexport default function SpotifyFetch({ trackId }) {\r\n  const [trackDetails, setTrackDetails] = useState(null);\r\n  const fetchAccessToken = AccessToken(); // Använd AccessToken för att hämta access token\r\n\r\n  useEffect(() => {\r\n    const fetchAccessToken = async () => {\r\n      try {\r\n        const response = await fetch(\"https://accounts.spotify.com/api/token\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            Authorization:\r\n              \"Basic \" +\r\n              btoa(\r\n                \"2996a4789f6c4508a187d42e86df6eac:eae403656d5d4b4cb324745279a224e1\",\r\n              ),\r\n          },\r\n          body: \"grant_type=client_credentials\",\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch access token\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setAccessToken(data.access_token); // Sätt åtkomsttoken i staten\r\n        return data.access_token; // Returnera åtkomsttoken\r\n      } catch (error) {\r\n        console.error(\"Error fetching access token:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchTrackDetails = async () => {\r\n      try {\r\n        const accessToken = await fetchAccessToken(); // Hämta access token genom att anropa fetchAccessToken\r\n        const response = await fetch(\r\n          `https://api.spotify.com/v1/tracks/${trackId}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          },\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch track details\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setTrackDetails(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching track details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTrackDetails();\r\n  }, [fetchAccessToken, trackId]); // Include fetchAccessToken as a dependency\r\n\r\n  return (\r\n    <>\r\n      {trackDetails && (\r\n        <div>\r\n          <h3>Track Details</h3>\r\n          <p>Title: {trackDetails.name}</p>\r\n          <p>Artist: {trackDetails.artists[0].name}</p>\r\n          <p>Album: {trackDetails.album.name}</p>\r\n          {/* Display the access token */}\r\n          {/* Show other details about the track if needed */}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}