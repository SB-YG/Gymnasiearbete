{"ast":null,"code":"var _jsxFileName = \"/workspaces/gymnasiearbete/src/components/SpotifyData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpotifyData = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState(null);\n  const [spotifyData, setSpotifyData] = useState(null);\n  const [error, setError] = useState(null); // Add state for errors\n\n  useEffect(() => {\n    const generateAccessToken = async () => {\n      const clientId = \"2996a4789f6c4508a187d42e86df6eac\";\n      const clientSecret = \"eae403656d5d4b4cb324745279a224e1\";\n      const response = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n          client_id: clientId,\n          client_secret: clientSecret,\n          grant_type: \"client_credentials\"\n        })\n      });\n      const data = await response.json();\n      setAccessToken(data.access_token);\n    };\n    generateAccessToken();\n  }, []);\n  useEffect(() => {\n    if (accessToken) {\n      const apiUrl = \"https://api.spotify.com/v1/artists/53XhwfbYqKCa1cC15pYq2q\";\n      const fetchConfig = {\n        method: \"GET\",\n        headers: {\n          Authorization: \"Bearer \".concat(accessToken)\n        }\n      };\n      fetch(apiUrl, fetchConfig).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        return response.json();\n      }).then(data => {\n        setSpotifyData(data);\n        console.log(\"Spotify Data:\", data); // Log the Spotify data\n        console.log(\"Spotify Access Token:\", accessToken); // Log the Spotify access token\n      }).catch(error => {\n        console.error(\"There was a problem with the fetch operation:\", error);\n        setError(error.message); // Set error message\n      });\n    }\n  }, [accessToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Spotify Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), \" \", spotifyData && spotifyData.items ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ArtistInfo, {\n        artistData: spotifyData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [spotifyData.name, \" - Albums\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"albums-container\",\n        children: spotifyData.items.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: album.images[0].url,\n            alt: album.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: album.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Date: \", album.release_date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, album.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SpotifyData, \"LkeIh+e+ESsE+XQzP6i+90DEaAg=\");\n_c = SpotifyData;\nexport default SpotifyData;\nvar _c;\n$RefreshReg$(_c, \"SpotifyData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","SpotifyData","_s","accessToken","setAccessToken","spotifyData","setSpotifyData","error","setError","generateAccessToken","clientId","clientSecret","response","fetch","method","headers","body","URLSearchParams","client_id","client_secret","grant_type","data","json","access_token","apiUrl","fetchConfig","Authorization","concat","then","ok","Error","console","log","catch","message","children","fileName","_jsxFileName","lineNumber","columnNumber","items","ArtistInfo","artistData","name","className","map","album","src","images","url","alt","release_date","id","_c","$RefreshReg$"],"sources":["/workspaces/gymnasiearbete/src/components/SpotifyData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst SpotifyData = () => {\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [spotifyData, setSpotifyData] = useState(null);\r\n  const [error, setError] = useState(null); // Add state for errors\r\n\r\n  useEffect(() => {\r\n    const generateAccessToken = async () => {\r\n      const clientId = \"2996a4789f6c4508a187d42e86df6eac\";\r\n      const clientSecret = \"eae403656d5d4b4cb324745279a224e1\";\r\n\r\n      const response = await fetch(\"https://accounts.spotify.com/api/token\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        body: new URLSearchParams({\r\n          client_id: clientId,\r\n          client_secret: clientSecret,\r\n          grant_type: \"client_credentials\",\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setAccessToken(data.access_token);\r\n    };\r\n\r\n    generateAccessToken();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (accessToken) {\r\n      const apiUrl =\r\n        \"https://api.spotify.com/v1/artists/53XhwfbYqKCa1cC15pYq2q\";\r\n\r\n      const fetchConfig = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      };\r\n\r\n      fetch(apiUrl, fetchConfig)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          setSpotifyData(data);\r\n          console.log(\"Spotify Data:\", data); // Log the Spotify data\r\n          console.log(\"Spotify Access Token:\", accessToken); // Log the Spotify access token\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was a problem with the fetch operation:\", error);\r\n          setError(error.message); // Set error message\r\n        });\r\n    }\r\n  }, [accessToken]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Spotify Data</h1>\r\n      {error && <p>Error: {error}</p>} {/* Display error if any */}\r\n      {spotifyData && spotifyData.items ? (\r\n        <>\r\n          <ArtistInfo artistData={spotifyData} />\r\n          <hr />\r\n          <h2>{spotifyData.name} - Albums</h2>\r\n          <div className=\"albums-container\">\r\n            {spotifyData.items.map((album) => (\r\n              <div key={album.id} className=\"album-item\">\r\n                <img src={album.images[0].url} alt={album.name} />\r\n                <h3>{album.name}</h3>\r\n                <p>Release Date: {album.release_date}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpotifyData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}